/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/_app"],{

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[2]!./public/css/main.css":
/*!*********************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[2]!./public/css/main.css ***!
  \*********************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* GOOGLE FONTS */\\r\\n@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@100;400;500;600;700;800;900&display=swap');\\r\\n\\r\\n/* VARIABLES CSS */\\r\\n\\r\\n:root {\\r\\n    --header-height: 3.5rem;\\r\\n    --nav-width: 219px;\\r\\n    \\r\\n    /*========== Colors ==========*/\\r\\n    --first-color-light: #F4F0FA;\\r\\n    --title-color: #232323;\\r\\n    --text-color: #232323;\\r\\n    --text-color-light: #A5A1AA;\\r\\n    --body-color: #EEEEEE;\\r\\n    --container-color: #5E5E5E;\\r\\n    --primary: #EDEDED;\\r\\n    --secundary: #2A1633;\\r\\n    --tree: #130A17;\\r\\n    --four: #DEDEDE;\\r\\n    --five: #FF8000;\\r\\n    --six: #FF8020;\\r\\n    --seven: #130A17;\\r\\n    --white: #fff;\\r\\n    --dark: #1c1c1c;\\r\\n    --background: #0B0D17;\\r\\n    \\r\\n    /*========== Font and typography ==========*/\\r\\n    --body-font: 'Poppins', sans-serif;\\r\\n    --normal-font-size: .938rem;\\r\\n    --small-font-size: .75rem;\\r\\n    --smaller-font-size: .75rem;\\r\\n    \\r\\n    /*========== Font weight ==========*/\\r\\n    --font-medium: 500;\\r\\n    --font-semi-bold: 600;\\r\\n    \\r\\n    /*========== z index ==========*/\\r\\n    --z-fixed: 100;\\r\\n}\\r\\n\\r\\n@media screen and (min-width: 1024px) {\\r\\n    :root {\\r\\n      --normal-font-size: 1rem;\\r\\n      --small-font-size: .875rem;\\r\\n      --smaller-font-size: .813rem;\\r\\n    }\\r\\n}\\r\\n\\r\\n/* BASE */\\r\\n\\r\\n*, ::before, ::after {\\r\\n    box-sizing: border-box;\\r\\n}\\r\\n\\r\\n\\r\\nbody {\\r\\n    font-family: var(--body-font);\\r\\n    margin: var(--header-height) 0 0 0;\\r\\n    padding: 1rem 1rem 0;\\r\\n    font-family: var(--body-font);\\r\\n    font-size: var(--normal-font-size);\\r\\n    background-color: var(--body-color);\\r\\n    color: var(--text-color);\\r\\n    font-display: swap !important;\\r\\n}\\r\\n\\r\\nh3 {\\r\\n    margin: 0;\\r\\n}\\r\\n  \\r\\na {\\r\\n    text-decoration: none;\\r\\n}\\r\\n\\r\\nimg {\\r\\n    max-width: 100%;\\r\\n    height: auto;\\r\\n}\\r\\n\\r\\n.yweb__title {\\r\\n    font-size: 2.8rem;\\r\\n    line-height: 1;\\r\\n}\\r\\n\\r\\n.yweb__description {\\r\\n    font-size: 1rem;\\r\\n    font-weight: 400;\\r\\n}\\r\\n\\r\\n.yweb__subtitle {\\r\\n    font-size: 1.8rem;\\r\\n    line-height: 1;\\r\\n}\\r\\n\\r\\n.yweb__subdescription {\\r\\n    font-size: 0.8rem;\\r\\n    font-weight: 400;\\r\\n}\\r\\n\\r\\n\\r\\n/* HEADER */\\r\\n\\r\\n.header {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width: 100%;\\r\\n    background-color: var(--seven);\\r\\n    box-shadow: 0 3px 0 rgba(0, 0, 0, 0.1);\\r\\n    padding: 0 1rem;\\r\\n    z-index: var(--z-fixed);\\r\\n}\\r\\n\\r\\n.header__container {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    height: var(--header-height);\\r\\n    justify-content: space-between;\\r\\n}\\r\\n  \\r\\n.header__img {\\r\\n    width: 35px;\\r\\n    height: 35px;\\r\\n    border-radius: 50%;\\r\\n}\\r\\n\\r\\n.header__logo {\\r\\n    width: auto auto;\\r\\n    height: 35px;\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.header__search {\\r\\n    display: flex;\\r\\n    padding: .40rem .75rem;\\r\\n    background-color: var(--first-color-light);\\r\\n    border-radius: .25rem;\\r\\n}\\r\\n\\r\\n.header__input {\\r\\n    width: 100%;\\r\\n    border: none;\\r\\n    outline: none;\\r\\n    background-color: var(--first-color-light);\\r\\n}\\r\\n\\r\\n.header__input::-moz-placeholder {\\r\\n    font-family: var(--body-font);\\r\\n    color: var(--primary);\\r\\n}\\r\\n\\r\\n.header__input:-ms-input-placeholder {\\r\\n    font-family: var(--body-font);\\r\\n    color: var(--primary);\\r\\n}\\r\\n\\r\\n.header__input::placeholder {\\r\\n    font-family: var(--body-font);\\r\\n    color: var(--primary);\\r\\n}\\r\\n\\r\\n.header__icon, \\r\\n.header__toggle {\\r\\n    font-size: 1.2rem;\\r\\n    color: var(--white)\\r\\n}\\r\\n\\r\\n.header__toggle {\\r\\n    color: var(--white);\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n/* NAV */\\r\\n.nav {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: -100%;\\r\\n    height: 100vh;\\r\\n    padding: 1rem 1rem 3rem;\\r\\n    background-color: var(--four);\\r\\n    box-shadow: 1px 0 0 rgba(22, 8, 43, 0.1);\\r\\n    z-index: var(--z-fixed);\\r\\n    transition: .4s;\\r\\n}\\r\\n\\r\\n.nav__container {\\r\\n    height: 100%;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: space-between;\\r\\n    padding-bottom: 2rem;\\r\\n    overflow: auto;\\r\\n    scrollbar-width: none; /* para mozilla */\\r\\n}\\r\\n  \\r\\n\\r\\n  \\r\\n/* Para Google Chrome y otros */\\r\\n.nav__container::-webkit-scrollbar {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.nav__logo {\\r\\n    font-weight: var(--font-semi-bold);\\r\\n    margin-bottom: 2.5rem;\\r\\n}\\r\\n\\r\\n.nav__list, \\r\\n.nav__items {\\r\\n    display: grid;\\r\\n}\\r\\n\\r\\n.nav__list {\\r\\n    grid-row-gap: 2.5rem;\\r\\n    row-gap: 2.5rem;\\r\\n}\\r\\n\\r\\n.nav__items {\\r\\n    grid-row-gap: 1.5rem;\\r\\n    row-gap: 1.5rem;\\r\\n}\\r\\n\\r\\n.nav__subtitle {\\r\\n    font-size: var(--normal-font-size);\\r\\n    text-transform: uppercase;\\r\\n    letter-spacing: .1rem;\\r\\n    color: var(--text-color-light);\\r\\n}\\r\\n\\r\\n.nav__link {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    color: var(--text-color);\\r\\n}\\r\\n\\r\\n.nav__link:hover {\\r\\n    color: var(--five);\\r\\n}\\r\\n\\r\\n.nav__icon {\\r\\n    font-size: 1.2rem;\\r\\n    margin-right: .5rem;\\r\\n}\\r\\n\\r\\n\\r\\n.nav__name {\\r\\n    font-size: var(--small-font-size);\\r\\n    font-weight: var(--font-medium);\\r\\n    white-space: nowrap;\\r\\n}\\r\\n\\r\\n.nav__logout {\\r\\n    margin-top: 5rem;\\r\\n}\\r\\n\\r\\n/* Dropdown */\\r\\n.nav__dropdown {\\r\\n    overflow: hidden;\\r\\n    max-height: 21px;\\r\\n    transition: .4s ease-in-out;\\r\\n}\\r\\n\\r\\n.nav__dropdown-collapse {\\r\\n    background-color: var(--primary);\\r\\n    border-radius: .25rem;\\r\\n    margin-top: 1rem;\\r\\n}\\r\\n\\r\\n.nav__dropdown-content {\\r\\n    display: grid;\\r\\n    grid-row-gap: .5rem;\\r\\n    row-gap: .5rem;\\r\\n    padding: .75rem 2.5rem .75rem 1.8rem;\\r\\n}\\r\\n\\r\\n.nav__dropdown-item {\\r\\n    font-size: var(--smaller-font-size);\\r\\n    font-weight: var(--font-medium);\\r\\n    color: var(--text-color);\\r\\n}\\r\\n\\r\\n.nav__dropdown-item:hover {\\r\\n    color: var(--five);\\r\\n}\\r\\n\\r\\n.nav__dropdown-icon {\\r\\n    margin-left: auto;\\r\\n    transition: .4s;\\r\\n}\\r\\n/* Show dropdown collapse */\\r\\n.nav__dropdown:hover {\\r\\n    max-height: 100rem;\\r\\n}\\r\\n  \\r\\n/* Rotate icon arrow */\\r\\n.nav__dropdown:hover .nav__dropdown-icon {\\r\\n    transform: rotate(180deg);\\r\\n}\\r\\n  \\r\\n/*===== Show menu =====*/\\r\\n.show-menu {\\r\\n    left: 0;\\r\\n}\\r\\n  \\r\\n/*===== Active link =====*/\\r\\n.active {\\r\\n    color: var(--five);\\r\\n}\\r\\n\\r\\n/*===== MAIN =====*/\\r\\n.hero__yweb {\\r\\n    margin: 100px 0;\\r\\n    display: grid;\\r\\n    grid-template-columns: repeat(2, 1fr);\\r\\n    grid-gap: 1rem;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.hero__yweb .btn__content_hero {\\r\\n    margin: 35px 0;\\r\\n}\\r\\n\\r\\n.hero__yweb .item__hero {\\r\\n    margin: auto;\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n\\r\\n.hero__yweb .hero__img {\\r\\n    width: 400px;\\r\\n    height: auto;\\r\\n    border-radius: 8px;\\r\\n    box-shadow: 0 1px 1px 0 rgb(0 0 0 / 10%);\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.hero__yweb .btn__hero {\\r\\n    position: relative;\\r\\n    font-size: 1rem;\\r\\n    line-height: 1;\\r\\n    border-radius: 8px;\\r\\n    padding: 17px;\\r\\n    background: var(--seven);\\r\\n    color: var(--white);\\r\\n}\\r\\n\\r\\n.hero__yweb .btn__hero:hover {\\r\\n    background: var(--secundary);\\r\\n    color: var(--five);\\r\\n    transition: .3s;\\r\\n}\\r\\n\\r\\n/* SERVICIOS */\\r\\n\\r\\n.servicio__yweb {\\r\\n    margin: 100px 0;\\r\\n}\\r\\n\\r\\n\\r\\n.servicio__yweb .item__servicio {\\r\\n    display: grid;\\r\\n    grid-template-columns: repeat(4, 1fr);\\r\\n    align-items: center;\\r\\n    grid-gap: 1rem;\\r\\n}\\r\\n\\r\\n.servicio__yweb .card__servicio {\\r\\n    width: 100%;\\r\\n    height: 180px;\\r\\n    padding: 15px 15px;\\r\\n    color: var(--text-color);\\r\\n    background-color: var(--four);\\r\\n    border-radius: 8px;\\r\\n    box-shadow: 0 1px 1px 0 rgb(0 0 0 / 10%);\\r\\n}\\r\\n\\r\\n.servicio__yweb .card__servicio:hover {\\r\\n    background-color: var(--body-color);\\r\\n    color: var(--five);\\r\\n    transition: .3s;\\r\\n}\\r\\n\\r\\n.servicio__yweb .servicio__card-header {\\r\\n    display: grid;\\r\\n    grid-template-columns: auto auto;\\r\\n    justify-content: space-between;\\r\\n}\\r\\n\\r\\n/* NOSOTROS */\\r\\n\\r\\n.nosotros__yweb {\\r\\n    margin: 100px 0;\\r\\n}\\r\\n\\r\\n.nosotros__yweb .item__nosotros {\\r\\n    display: grid;\\r\\n    grid-template-columns: repeat(2, 1fr);\\r\\n    align-items: center;\\r\\n    grid-gap: 1rem;\\r\\n}\\r\\n\\r\\n.nosotros__yweb .item__nosotros div {\\r\\n    margin: auto;\\r\\n}\\r\\n\\r\\n.nosotros__yweb .item__nosotros .yweb__subtitle {\\r\\n    font-size: 2rem;\\r\\n    line-height: 1;\\r\\n}\\r\\n\\r\\n.nosotros__yweb .item__nosotros .description__nosotros {\\r\\n    font-size: 0.8rem;\\r\\n    font-weight: 400;\\r\\n}\\r\\n\\r\\n.nosotros__yweb .item__nosotros .nosotros__img {\\r\\n    width: 400px;\\r\\n    height: auto;\\r\\n    border-radius: 8px;\\r\\n    box-shadow: 0 1px 1px 0 rgb(0 0 0 / 10%);\\r\\n    margin: 35px 0;\\r\\n}\\r\\n\\r\\n/* PROYECTOS */\\r\\n\\r\\n.proyecto__yweb {\\r\\n    margin: 100px 0;\\r\\n}\\r\\n\\r\\n.item__proyectos {\\r\\n    display: grid;\\r\\n    grid-template-columns: repeat(4, 1fr);\\r\\n    align-items: center;\\r\\n    grid-gap: 1rem;\\r\\n}\\r\\n\\r\\n.img__proyecto {\\r\\n    width: 100%;\\r\\n    height: auto;\\r\\n    border-radius: 8px;\\r\\n}\\r\\n\\r\\n/* FOOTER */\\r\\n\\r\\n.footer__politicas-datos {\\r\\n    display: grid;\\r\\n    grid-template-columns: repeat(1, 1fr);\\r\\n    background: var(--body-color);\\r\\n    position: fixed;\\r\\n    width: 100%;\\r\\n    bottom: 0;\\r\\n}\\r\\n\\r\\n.footer__politicas-datos .footer__header a {\\r\\n    color: var(--text-color);\\r\\n}\\r\\n\\r\\n/* CONTACTO */\\r\\n\\r\\n.contacto {\\r\\n    margin: 100px 0;\\r\\n    display: grid;\\r\\n    grid-template-columns: repeat(2, 1fr);\\r\\n    grid-gap: 1rem;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.contacto  .contacto__item ul {\\r\\n    list-style: none;\\r\\n    line-height: 2;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.contacto  .contacto__item li i {\\r\\n    font-size: 1.4rem;\\r\\n}\\r\\n\\r\\n\\r\\n.contacto .contacto__item ul a {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    color: var(--first-color-light);\\r\\n    font-weight: 600;\\r\\n}\\r\\n\\r\\n.formulario__yweb {\\r\\n    display: grid;\\r\\n    grid-template-columns: 1fr 1fr;\\r\\n    grid-gap: 1rem;\\r\\n    gap: 1rem;\\r\\n}\\r\\n\\r\\n.formulario__label {\\r\\n    display: block;\\r\\n    font-weight: 700;\\r\\n    padding: 10px;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.formulario__grupo-input {\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.fomulario__input {\\r\\n    width: 100%;\\r\\n    background: var(--white);\\r\\n    border: 3px solid transparent;\\r\\n    border-radius: 8px;\\r\\n    height: 45px;\\r\\n    line-height: 45px;\\r\\n    padding: 0 40px 0 10px;\\r\\n    transition: .3s ease all;\\r\\n}\\r\\n\\r\\n.fomulario__input:focus {\\r\\n    border: 3px solid var(--five);\\r\\n    outline: none;\\r\\n    box-shadow: 3px 0px 30px rgba(22, 8, 43, 0.1);\\r\\n}\\r\\n\\r\\n.formulario__input-error {\\r\\n    font-size: 12px;\\r\\n    margin-bottom: 0;\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.formulario__input-error-activo {\\r\\n    display: block;\\r\\n}\\r\\n\\r\\n.fomulario__validacion-estado {\\r\\n    position: absolute;\\r\\n    right: 10px;\\r\\n    bottom: 15px;\\r\\n}\\r\\n\\r\\n/* BOTON DE WHATSAPP */\\r\\n\\r\\n.float {\\r\\n\\tposition:fixed;\\r\\n\\twidth:60px;\\r\\n\\theight:60px;\\r\\n\\tbottom:40px;\\r\\n\\tright:40px;\\r\\n\\tbackground-color:#25d366;\\r\\n\\tcolor:#FFF;\\r\\n\\tborder-radius: 8px;\\r\\n\\ttext-align:center;\\r\\n\\tbox-shadow: 2px 2px 3px #999;\\r\\n    z-index:100;\\r\\n}\\r\\n\\r\\n.float .bx {\\r\\n    font-size: 2.7rem\\r\\n}\\r\\n\\r\\n\\r\\n.float:hover {\\r\\n\\ttext-decoration: none;\\r\\n\\tcolor: #25d366;\\r\\n    background-color:#fff;\\r\\n}\\r\\n\\r\\n.my-float{\\r\\n\\tmargin-top:10px;\\r\\n}\\r\\n\\r\\n/* ========== MEDIA QUERIES ==========*/\\r\\n/* For small devices reduce search*/\\r\\n\\r\\n@media screen and (min-width: 1460px) {\\r\\n    .hero__yweb .yweb__title {\\r\\n        font-size: 3.2rem;\\r\\n        width: 80%;\\r\\n        line-height: 1.3;\\r\\n    }\\r\\n    .hero__yweb .yweb__description {\\r\\n        font-size: 1.2rem;\\r\\n        width: 80%;\\r\\n    }\\r\\n\\r\\n    /* .hero__yweb .hero__img {\\r\\n        width: 500px;\\r\\n    } */\\r\\n}\\r\\n  \\r\\n@media screen and (min-width: 768px) {\\r\\n    body {\\r\\n        padding: 1rem 3rem 0 6rem;\\r\\n    }\\r\\n    .header {\\r\\n        padding: 0 3rem 0 6rem;\\r\\n    }\\r\\n    .header__container {\\r\\n        height: calc(var(--header-height) + .5rem);\\r\\n    }\\r\\n    .header__search {\\r\\n        width: 300px;\\r\\n        padding: .55rem .75rem;\\r\\n    }\\r\\n    .header__toggle {\\r\\n        display: none;\\r\\n    }\\r\\n    .header__logo {\\r\\n        display: block;\\r\\n    }\\r\\n    .header__img {\\r\\n        width: 40px;\\r\\n        height: 40px;\\r\\n        order: 1;\\r\\n    }\\r\\n    .nav {\\r\\n        left: 0;\\r\\n        padding: 1.2rem 1.5rem 0;\\r\\n        width: 68px; /* Reduced navbar */\\r\\n    }\\r\\n    .nav__items {\\r\\n        grid-row-gap: 1.7rem;\\r\\n        row-gap: 1.7rem;\\r\\n    }\\r\\n    .nav__icon {\\r\\n        font-size: 1.3rem;\\r\\n    }\\r\\n\\r\\n    /* Element opacity */\\r\\n    .nav__logo-name, \\r\\n    .nav__name, \\r\\n    .nav__subtitle, \\r\\n    .nav__dropdown-icon {\\r\\n        opacity: 0;\\r\\n        transition: .3s;\\r\\n    }\\r\\n\\r\\n\\r\\n    /* Navbar expanded */\\r\\n    .nav:hover {\\r\\n        width: var(--nav-width);\\r\\n    }\\r\\n\\r\\n    /* Visible elements */\\r\\n    .nav:hover .nav__logo-name {\\r\\n        opacity: 1;\\r\\n    }\\r\\n    .nav:hover .nav__subtitle {\\r\\n        opacity: 1;\\r\\n    }\\r\\n    .nav:hover .nav__name {\\r\\n        opacity: 1;\\r\\n    }\\r\\n    .nav:hover .nav__dropdown-icon {\\r\\n        opacity: 1;\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\n/* Small devices (landscape phones, less than 768px) */\\r\\n@media screen and (max-width:998px){\\r\\n    .servicio__yweb .card__servicio {\\r\\n        height: auto;\\r\\n        padding: 20 20;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media screen and (max-width: 768px) {\\r\\n    /* Main */\\r\\n    .hero__yweb {\\r\\n        margin: 50px 0;\\r\\n        grid-template-columns: repeat(1, 1fr);\\r\\n    }\\r\\n    \\r\\n    .servicio__yweb .item__servicio {\\r\\n        margin: 50px 0;\\r\\n        grid-template-columns: repeat(2, 1fr);\\r\\n    }\\r\\n\\r\\n    .nosotros__yweb .item__nosotros {\\r\\n        margin: 50px 0;\\r\\n        grid-template-columns: repeat(1, 1fr);\\r\\n    }\\r\\n\\r\\n    .proyecto__yweb {\\r\\n        margin: 50px 0;\\r\\n    }\\r\\n\\r\\n    .proyecto__yweb .item__proyectos {\\r\\n        grid-template-columns: repeat(2, 1fr);\\r\\n    }\\r\\n\\r\\n    .footer {\\r\\n        margin: 50px 0;\\r\\n    }\\r\\n\\r\\n    .footer .item__footer {\\r\\n        display: grid;\\r\\n        grid-template-columns: repeat(2, 1fr);\\r\\n        align-items: center;\\r\\n        grid-gap: 1rem;\\r\\n    }\\r\\n}\\r\\n\\r\\n/* X-Small devices (portrait phones, less than 576px) */\\r\\n@media (max-width: 575.98px) {\\r\\n    .hero__yweb .hero__img {\\r\\n        width: auto;\\r\\n        height: auto;\\r\\n    }\\r\\n\\r\\n    .servicio__yweb .item__servicio {\\r\\n        grid-template-columns: repeat(1, 1fr);\\r\\n    }\\r\\n\\r\\n    .hero__yweb .yweb__title {\\r\\n        font-size: 2.5rem;\\r\\n        line-height: 1;\\r\\n    }\\r\\n\\r\\n    .servicio__yweb .yweb__subtitle {\\r\\n        font-size: 1.5rem;\\r\\n        line-height: 1;\\r\\n    }\\r\\n\\r\\n    .nosotros__yweb .item__nosotros {\\r\\n        margin: 50px 0;\\r\\n        grid-template-columns: repeat(1, 1fr);\\r\\n    }\\r\\n\\r\\n    .nosotros__yweb .item__nosotros .nosotros__img {\\r\\n        width: auto;\\r\\n        height: auto;\\r\\n    }\\r\\n\\r\\n    .proyecto__yweb .item__proyectos {\\r\\n        grid-template-columns: repeat(1, 1fr);\\r\\n    }\\r\\n\\r\\n    .footer__header .yweb__subdescription p {\\r\\n        font-size: 0.7rem;\\r\\n    }\\r\\n\\r\\n    .footer__politicas-datos .footer__header a {\\r\\n        font-size: 0.7rem;\\r\\n    }\\r\\n\\r\\n    .float {\\r\\n        position:fixed;\\r\\n        width:60px;\\r\\n        height:60px;\\r\\n        bottom:45px;\\r\\n        right:20px;\\r\\n    }\\r\\n    \\r\\n    .float .bx {\\r\\n        font-size: 2.7rem\\r\\n    }\\r\\n    \\r\\n    .my-float{\\r\\n        margin-top:10px;\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\n/* // X-Small devices (portrait phones, less than 576px)\\r\\n@media (max-width: 575.98px) { ... }\\r\\n\\r\\n// Small devices (landscape phones, less than 768px)\\r\\n@media (max-width: 767.98px) { ... }\\r\\n\\r\\n// Medium devices (tablets, less than 992px)\\r\\n@media (max-width: 991.98px) { ... }\\r\\n\\r\\n// Large devices (desktops, less than 1200px)\\r\\n@media (max-width: 1199.98px) { ... }\\r\\n\\r\\n// X-Large devices (large desktops, less than 1400px)\\r\\n@media (max-width: 1399.98px) { ... } */\", \"\",{\"version\":3,\"sources\":[\"webpack://public/css/main.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/* GOOGLE FONTS */\\r\\n@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@100;400;500;600;700;800;900&display=swap');\\r\\n\\r\\n/* VARIABLES CSS */\\r\\n\\r\\n:root {\\r\\n    --header-height: 3.5rem;\\r\\n    --nav-width: 219px;\\r\\n    \\r\\n    /*========== Colors ==========*/\\r\\n    --first-color-light: #F4F0FA;\\r\\n    --title-color: #232323;\\r\\n    --text-color: #232323;\\r\\n    --text-color-light: #A5A1AA;\\r\\n    --body-color: #EEEEEE;\\r\\n    --container-color: #5E5E5E;\\r\\n    --primary: #EDEDED;\\r\\n    --secundary: #2A1633;\\r\\n    --tree: #130A17;\\r\\n    --four: #DEDEDE;\\r\\n    --five: #FF8000;\\r\\n    --six: #FF8020;\\r\\n    --seven: #130A17;\\r\\n    --white: #fff;\\r\\n    --dark: #1c1c1c;\\r\\n    --background: #0B0D17;\\r\\n    \\r\\n    /*========== Font and typography ==========*/\\r\\n    --body-font: 'Poppins', sans-serif;\\r\\n    --normal-font-size: .938rem;\\r\\n    --small-font-size: .75rem;\\r\\n    --smaller-font-size: .75rem;\\r\\n    \\r\\n    /*========== Font weight ==========*/\\r\\n    --font-medium: 500;\\r\\n    --font-semi-bold: 600;\\r\\n    \\r\\n    /*========== z index ==========*/\\r\\n    --z-fixed: 100;\\r\\n}\\r\\n\\r\\n@media screen and (min-width: 1024px) {\\r\\n    :root {\\r\\n      --normal-font-size: 1rem;\\r\\n      --small-font-size: .875rem;\\r\\n      --smaller-font-size: .813rem;\\r\\n    }\\r\\n}\\r\\n\\r\\n/* BASE */\\r\\n\\r\\n*, ::before, ::after {\\r\\n    box-sizing: border-box;\\r\\n}\\r\\n\\r\\n\\r\\nbody {\\r\\n    font-family: var(--body-font);\\r\\n    margin: var(--header-height) 0 0 0;\\r\\n    padding: 1rem 1rem 0;\\r\\n    font-family: var(--body-font);\\r\\n    font-size: var(--normal-font-size);\\r\\n    background-color: var(--body-color);\\r\\n    color: var(--text-color);\\r\\n    font-display: swap !important;\\r\\n}\\r\\n\\r\\nh3 {\\r\\n    margin: 0;\\r\\n}\\r\\n  \\r\\na {\\r\\n    text-decoration: none;\\r\\n}\\r\\n\\r\\nimg {\\r\\n    max-width: 100%;\\r\\n    height: auto;\\r\\n}\\r\\n\\r\\n.yweb__title {\\r\\n    font-size: 2.8rem;\\r\\n    line-height: 1;\\r\\n}\\r\\n\\r\\n.yweb__description {\\r\\n    font-size: 1rem;\\r\\n    font-weight: 400;\\r\\n}\\r\\n\\r\\n.yweb__subtitle {\\r\\n    font-size: 1.8rem;\\r\\n    line-height: 1;\\r\\n}\\r\\n\\r\\n.yweb__subdescription {\\r\\n    font-size: 0.8rem;\\r\\n    font-weight: 400;\\r\\n}\\r\\n\\r\\n\\r\\n/* HEADER */\\r\\n\\r\\n.header {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width: 100%;\\r\\n    background-color: var(--seven);\\r\\n    box-shadow: 0 3px 0 rgba(0, 0, 0, 0.1);\\r\\n    padding: 0 1rem;\\r\\n    z-index: var(--z-fixed);\\r\\n}\\r\\n\\r\\n.header__container {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    height: var(--header-height);\\r\\n    justify-content: space-between;\\r\\n}\\r\\n  \\r\\n.header__img {\\r\\n    width: 35px;\\r\\n    height: 35px;\\r\\n    border-radius: 50%;\\r\\n}\\r\\n\\r\\n.header__logo {\\r\\n    width: auto auto;\\r\\n    height: 35px;\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.header__search {\\r\\n    display: flex;\\r\\n    padding: .40rem .75rem;\\r\\n    background-color: var(--first-color-light);\\r\\n    border-radius: .25rem;\\r\\n}\\r\\n\\r\\n.header__input {\\r\\n    width: 100%;\\r\\n    border: none;\\r\\n    outline: none;\\r\\n    background-color: var(--first-color-light);\\r\\n}\\r\\n\\r\\n.header__input::placeholder {\\r\\n    font-family: var(--body-font);\\r\\n    color: var(--primary);\\r\\n}\\r\\n\\r\\n.header__icon, \\r\\n.header__toggle {\\r\\n    font-size: 1.2rem;\\r\\n    color: var(--white)\\r\\n}\\r\\n\\r\\n.header__toggle {\\r\\n    color: var(--white);\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n/* NAV */\\r\\n.nav {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: -100%;\\r\\n    height: 100vh;\\r\\n    padding: 1rem 1rem 3rem;\\r\\n    background-color: var(--four);\\r\\n    box-shadow: 1px 0 0 rgba(22, 8, 43, 0.1);\\r\\n    z-index: var(--z-fixed);\\r\\n    transition: .4s;\\r\\n}\\r\\n\\r\\n.nav__container {\\r\\n    height: 100%;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: space-between;\\r\\n    padding-bottom: 2rem;\\r\\n    overflow: auto;\\r\\n    scrollbar-width: none; /* para mozilla */\\r\\n}\\r\\n  \\r\\n\\r\\n  \\r\\n/* Para Google Chrome y otros */\\r\\n.nav__container::-webkit-scrollbar {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.nav__logo {\\r\\n    font-weight: var(--font-semi-bold);\\r\\n    margin-bottom: 2.5rem;\\r\\n}\\r\\n\\r\\n.nav__list, \\r\\n.nav__items {\\r\\n    display: grid;\\r\\n}\\r\\n\\r\\n.nav__list {\\r\\n    row-gap: 2.5rem;\\r\\n}\\r\\n\\r\\n.nav__items {\\r\\n    row-gap: 1.5rem;\\r\\n}\\r\\n\\r\\n.nav__subtitle {\\r\\n    font-size: var(--normal-font-size);\\r\\n    text-transform: uppercase;\\r\\n    letter-spacing: .1rem;\\r\\n    color: var(--text-color-light);\\r\\n}\\r\\n\\r\\n.nav__link {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    color: var(--text-color);\\r\\n}\\r\\n\\r\\n.nav__link:hover {\\r\\n    color: var(--five);\\r\\n}\\r\\n\\r\\n.nav__icon {\\r\\n    font-size: 1.2rem;\\r\\n    margin-right: .5rem;\\r\\n}\\r\\n\\r\\n\\r\\n.nav__name {\\r\\n    font-size: var(--small-font-size);\\r\\n    font-weight: var(--font-medium);\\r\\n    white-space: nowrap;\\r\\n}\\r\\n\\r\\n.nav__logout {\\r\\n    margin-top: 5rem;\\r\\n}\\r\\n\\r\\n/* Dropdown */\\r\\n.nav__dropdown {\\r\\n    overflow: hidden;\\r\\n    max-height: 21px;\\r\\n    transition: .4s ease-in-out;\\r\\n}\\r\\n\\r\\n.nav__dropdown-collapse {\\r\\n    background-color: var(--primary);\\r\\n    border-radius: .25rem;\\r\\n    margin-top: 1rem;\\r\\n}\\r\\n\\r\\n.nav__dropdown-content {\\r\\n    display: grid;\\r\\n    row-gap: .5rem;\\r\\n    padding: .75rem 2.5rem .75rem 1.8rem;\\r\\n}\\r\\n\\r\\n.nav__dropdown-item {\\r\\n    font-size: var(--smaller-font-size);\\r\\n    font-weight: var(--font-medium);\\r\\n    color: var(--text-color);\\r\\n}\\r\\n\\r\\n.nav__dropdown-item:hover {\\r\\n    color: var(--five);\\r\\n}\\r\\n\\r\\n.nav__dropdown-icon {\\r\\n    margin-left: auto;\\r\\n    transition: .4s;\\r\\n}\\r\\n/* Show dropdown collapse */\\r\\n.nav__dropdown:hover {\\r\\n    max-height: 100rem;\\r\\n}\\r\\n  \\r\\n/* Rotate icon arrow */\\r\\n.nav__dropdown:hover .nav__dropdown-icon {\\r\\n    transform: rotate(180deg);\\r\\n}\\r\\n  \\r\\n/*===== Show menu =====*/\\r\\n.show-menu {\\r\\n    left: 0;\\r\\n}\\r\\n  \\r\\n/*===== Active link =====*/\\r\\n.active {\\r\\n    color: var(--five);\\r\\n}\\r\\n\\r\\n/*===== MAIN =====*/\\r\\n.hero__yweb {\\r\\n    margin: 100px 0;\\r\\n    display: grid;\\r\\n    grid-template-columns: repeat(2, 1fr);\\r\\n    grid-gap: 1rem;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.hero__yweb .btn__content_hero {\\r\\n    margin: 35px 0;\\r\\n}\\r\\n\\r\\n.hero__yweb .item__hero {\\r\\n    margin: auto;\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n\\r\\n.hero__yweb .hero__img {\\r\\n    width: 400px;\\r\\n    height: auto;\\r\\n    border-radius: 8px;\\r\\n    box-shadow: 0 1px 1px 0 rgb(0 0 0 / 10%);\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.hero__yweb .btn__hero {\\r\\n    position: relative;\\r\\n    font-size: 1rem;\\r\\n    line-height: 1;\\r\\n    border-radius: 8px;\\r\\n    padding: 17px;\\r\\n    background: var(--seven);\\r\\n    color: var(--white);\\r\\n}\\r\\n\\r\\n.hero__yweb .btn__hero:hover {\\r\\n    background: var(--secundary);\\r\\n    color: var(--five);\\r\\n    transition: .3s;\\r\\n}\\r\\n\\r\\n/* SERVICIOS */\\r\\n\\r\\n.servicio__yweb {\\r\\n    margin: 100px 0;\\r\\n}\\r\\n\\r\\n\\r\\n.servicio__yweb .item__servicio {\\r\\n    display: grid;\\r\\n    grid-template-columns: repeat(4, 1fr);\\r\\n    align-items: center;\\r\\n    grid-gap: 1rem;\\r\\n}\\r\\n\\r\\n.servicio__yweb .card__servicio {\\r\\n    width: 100%;\\r\\n    height: 180px;\\r\\n    padding: 15px 15px;\\r\\n    color: var(--text-color);\\r\\n    background-color: var(--four);\\r\\n    border-radius: 8px;\\r\\n    box-shadow: 0 1px 1px 0 rgb(0 0 0 / 10%);\\r\\n}\\r\\n\\r\\n.servicio__yweb .card__servicio:hover {\\r\\n    background-color: var(--body-color);\\r\\n    color: var(--five);\\r\\n    transition: .3s;\\r\\n}\\r\\n\\r\\n.servicio__yweb .servicio__card-header {\\r\\n    display: grid;\\r\\n    grid-template-columns: auto auto;\\r\\n    justify-content: space-between;\\r\\n}\\r\\n\\r\\n/* NOSOTROS */\\r\\n\\r\\n.nosotros__yweb {\\r\\n    margin: 100px 0;\\r\\n}\\r\\n\\r\\n.nosotros__yweb .item__nosotros {\\r\\n    display: grid;\\r\\n    grid-template-columns: repeat(2, 1fr);\\r\\n    align-items: center;\\r\\n    grid-gap: 1rem;\\r\\n}\\r\\n\\r\\n.nosotros__yweb .item__nosotros div {\\r\\n    margin: auto;\\r\\n}\\r\\n\\r\\n.nosotros__yweb .item__nosotros .yweb__subtitle {\\r\\n    font-size: 2rem;\\r\\n    line-height: 1;\\r\\n}\\r\\n\\r\\n.nosotros__yweb .item__nosotros .description__nosotros {\\r\\n    font-size: 0.8rem;\\r\\n    font-weight: 400;\\r\\n}\\r\\n\\r\\n.nosotros__yweb .item__nosotros .nosotros__img {\\r\\n    width: 400px;\\r\\n    height: auto;\\r\\n    border-radius: 8px;\\r\\n    box-shadow: 0 1px 1px 0 rgb(0 0 0 / 10%);\\r\\n    margin: 35px 0;\\r\\n}\\r\\n\\r\\n/* PROYECTOS */\\r\\n\\r\\n.proyecto__yweb {\\r\\n    margin: 100px 0;\\r\\n}\\r\\n\\r\\n.item__proyectos {\\r\\n    display: grid;\\r\\n    grid-template-columns: repeat(4, 1fr);\\r\\n    align-items: center;\\r\\n    grid-gap: 1rem;\\r\\n}\\r\\n\\r\\n.img__proyecto {\\r\\n    width: 100%;\\r\\n    height: auto;\\r\\n    border-radius: 8px;\\r\\n}\\r\\n\\r\\n/* FOOTER */\\r\\n\\r\\n.footer__politicas-datos {\\r\\n    display: grid;\\r\\n    grid-template-columns: repeat(1, 1fr);\\r\\n    background: var(--body-color);\\r\\n    position: fixed;\\r\\n    width: 100%;\\r\\n    bottom: 0;\\r\\n}\\r\\n\\r\\n.footer__politicas-datos .footer__header a {\\r\\n    color: var(--text-color);\\r\\n}\\r\\n\\r\\n/* CONTACTO */\\r\\n\\r\\n.contacto {\\r\\n    margin: 100px 0;\\r\\n    display: grid;\\r\\n    grid-template-columns: repeat(2, 1fr);\\r\\n    grid-gap: 1rem;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.contacto  .contacto__item ul {\\r\\n    list-style: none;\\r\\n    line-height: 2;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.contacto  .contacto__item li i {\\r\\n    font-size: 1.4rem;\\r\\n}\\r\\n\\r\\n\\r\\n.contacto .contacto__item ul a {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    color: var(--first-color-light);\\r\\n    font-weight: 600;\\r\\n}\\r\\n\\r\\n.formulario__yweb {\\r\\n    display: grid;\\r\\n    grid-template-columns: 1fr 1fr;\\r\\n    gap: 1rem;\\r\\n}\\r\\n\\r\\n.formulario__label {\\r\\n    display: block;\\r\\n    font-weight: 700;\\r\\n    padding: 10px;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.formulario__grupo-input {\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.fomulario__input {\\r\\n    width: 100%;\\r\\n    background: var(--white);\\r\\n    border: 3px solid transparent;\\r\\n    border-radius: 8px;\\r\\n    height: 45px;\\r\\n    line-height: 45px;\\r\\n    padding: 0 40px 0 10px;\\r\\n    transition: .3s ease all;\\r\\n}\\r\\n\\r\\n.fomulario__input:focus {\\r\\n    border: 3px solid var(--five);\\r\\n    outline: none;\\r\\n    box-shadow: 3px 0px 30px rgba(22, 8, 43, 0.1);\\r\\n}\\r\\n\\r\\n.formulario__input-error {\\r\\n    font-size: 12px;\\r\\n    margin-bottom: 0;\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.formulario__input-error-activo {\\r\\n    display: block;\\r\\n}\\r\\n\\r\\n.fomulario__validacion-estado {\\r\\n    position: absolute;\\r\\n    right: 10px;\\r\\n    bottom: 15px;\\r\\n}\\r\\n\\r\\n/* BOTON DE WHATSAPP */\\r\\n\\r\\n.float {\\r\\n\\tposition:fixed;\\r\\n\\twidth:60px;\\r\\n\\theight:60px;\\r\\n\\tbottom:40px;\\r\\n\\tright:40px;\\r\\n\\tbackground-color:#25d366;\\r\\n\\tcolor:#FFF;\\r\\n\\tborder-radius: 8px;\\r\\n\\ttext-align:center;\\r\\n\\tbox-shadow: 2px 2px 3px #999;\\r\\n    z-index:100;\\r\\n}\\r\\n\\r\\n.float .bx {\\r\\n    font-size: 2.7rem\\r\\n}\\r\\n\\r\\n\\r\\n.float:hover {\\r\\n\\ttext-decoration: none;\\r\\n\\tcolor: #25d366;\\r\\n    background-color:#fff;\\r\\n}\\r\\n\\r\\n.my-float{\\r\\n\\tmargin-top:10px;\\r\\n}\\r\\n\\r\\n/* ========== MEDIA QUERIES ==========*/\\r\\n/* For small devices reduce search*/\\r\\n\\r\\n@media screen and (min-width: 1460px) {\\r\\n    .hero__yweb .yweb__title {\\r\\n        font-size: 3.2rem;\\r\\n        width: 80%;\\r\\n        line-height: 1.3;\\r\\n    }\\r\\n    .hero__yweb .yweb__description {\\r\\n        font-size: 1.2rem;\\r\\n        width: 80%;\\r\\n    }\\r\\n\\r\\n    /* .hero__yweb .hero__img {\\r\\n        width: 500px;\\r\\n    } */\\r\\n}\\r\\n  \\r\\n@media screen and (min-width: 768px) {\\r\\n    body {\\r\\n        padding: 1rem 3rem 0 6rem;\\r\\n    }\\r\\n    .header {\\r\\n        padding: 0 3rem 0 6rem;\\r\\n    }\\r\\n    .header__container {\\r\\n        height: calc(var(--header-height) + .5rem);\\r\\n    }\\r\\n    .header__search {\\r\\n        width: 300px;\\r\\n        padding: .55rem .75rem;\\r\\n    }\\r\\n    .header__toggle {\\r\\n        display: none;\\r\\n    }\\r\\n    .header__logo {\\r\\n        display: block;\\r\\n    }\\r\\n    .header__img {\\r\\n        width: 40px;\\r\\n        height: 40px;\\r\\n        order: 1;\\r\\n    }\\r\\n    .nav {\\r\\n        left: 0;\\r\\n        padding: 1.2rem 1.5rem 0;\\r\\n        width: 68px; /* Reduced navbar */\\r\\n    }\\r\\n    .nav__items {\\r\\n        row-gap: 1.7rem;\\r\\n    }\\r\\n    .nav__icon {\\r\\n        font-size: 1.3rem;\\r\\n    }\\r\\n\\r\\n    /* Element opacity */\\r\\n    .nav__logo-name, \\r\\n    .nav__name, \\r\\n    .nav__subtitle, \\r\\n    .nav__dropdown-icon {\\r\\n        opacity: 0;\\r\\n        transition: .3s;\\r\\n    }\\r\\n\\r\\n\\r\\n    /* Navbar expanded */\\r\\n    .nav:hover {\\r\\n        width: var(--nav-width);\\r\\n    }\\r\\n\\r\\n    /* Visible elements */\\r\\n    .nav:hover .nav__logo-name {\\r\\n        opacity: 1;\\r\\n    }\\r\\n    .nav:hover .nav__subtitle {\\r\\n        opacity: 1;\\r\\n    }\\r\\n    .nav:hover .nav__name {\\r\\n        opacity: 1;\\r\\n    }\\r\\n    .nav:hover .nav__dropdown-icon {\\r\\n        opacity: 1;\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\n/* Small devices (landscape phones, less than 768px) */\\r\\n@media screen and (max-width:998px){\\r\\n    .servicio__yweb .card__servicio {\\r\\n        height: auto;\\r\\n        padding: 20 20;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media screen and (max-width: 768px) {\\r\\n    /* Main */\\r\\n    .hero__yweb {\\r\\n        margin: 50px 0;\\r\\n        grid-template-columns: repeat(1, 1fr);\\r\\n    }\\r\\n    \\r\\n    .servicio__yweb .item__servicio {\\r\\n        margin: 50px 0;\\r\\n        grid-template-columns: repeat(2, 1fr);\\r\\n    }\\r\\n\\r\\n    .nosotros__yweb .item__nosotros {\\r\\n        margin: 50px 0;\\r\\n        grid-template-columns: repeat(1, 1fr);\\r\\n    }\\r\\n\\r\\n    .proyecto__yweb {\\r\\n        margin: 50px 0;\\r\\n    }\\r\\n\\r\\n    .proyecto__yweb .item__proyectos {\\r\\n        grid-template-columns: repeat(2, 1fr);\\r\\n    }\\r\\n\\r\\n    .footer {\\r\\n        margin: 50px 0;\\r\\n    }\\r\\n\\r\\n    .footer .item__footer {\\r\\n        display: grid;\\r\\n        grid-template-columns: repeat(2, 1fr);\\r\\n        align-items: center;\\r\\n        grid-gap: 1rem;\\r\\n    }\\r\\n}\\r\\n\\r\\n/* X-Small devices (portrait phones, less than 576px) */\\r\\n@media (max-width: 575.98px) {\\r\\n    .hero__yweb .hero__img {\\r\\n        width: auto;\\r\\n        height: auto;\\r\\n    }\\r\\n\\r\\n    .servicio__yweb .item__servicio {\\r\\n        grid-template-columns: repeat(1, 1fr);\\r\\n    }\\r\\n\\r\\n    .hero__yweb .yweb__title {\\r\\n        font-size: 2.5rem;\\r\\n        line-height: 1;\\r\\n    }\\r\\n\\r\\n    .servicio__yweb .yweb__subtitle {\\r\\n        font-size: 1.5rem;\\r\\n        line-height: 1;\\r\\n    }\\r\\n\\r\\n    .nosotros__yweb .item__nosotros {\\r\\n        margin: 50px 0;\\r\\n        grid-template-columns: repeat(1, 1fr);\\r\\n    }\\r\\n\\r\\n    .nosotros__yweb .item__nosotros .nosotros__img {\\r\\n        width: auto;\\r\\n        height: auto;\\r\\n    }\\r\\n\\r\\n    .proyecto__yweb .item__proyectos {\\r\\n        grid-template-columns: repeat(1, 1fr);\\r\\n    }\\r\\n\\r\\n    .footer__header .yweb__subdescription p {\\r\\n        font-size: 0.7rem;\\r\\n    }\\r\\n\\r\\n    .footer__politicas-datos .footer__header a {\\r\\n        font-size: 0.7rem;\\r\\n    }\\r\\n\\r\\n    .float {\\r\\n        position:fixed;\\r\\n        width:60px;\\r\\n        height:60px;\\r\\n        bottom:45px;\\r\\n        right:20px;\\r\\n    }\\r\\n    \\r\\n    .float .bx {\\r\\n        font-size: 2.7rem\\r\\n    }\\r\\n    \\r\\n    .my-float{\\r\\n        margin-top:10px;\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\n/* // X-Small devices (portrait phones, less than 576px)\\r\\n@media (max-width: 575.98px) { ... }\\r\\n\\r\\n// Small devices (landscape phones, less than 768px)\\r\\n@media (max-width: 767.98px) { ... }\\r\\n\\r\\n// Medium devices (tablets, less than 992px)\\r\\n@media (max-width: 991.98px) { ... }\\r\\n\\r\\n// Large devices (desktops, less than 1200px)\\r\\n@media (max-width: 1199.98px) { ... }\\r\\n\\r\\n// X-Large devices (large desktops, less than 1400px)\\r\\n@media (max-width: 1399.98px) { ... } */\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[2]!./public/css/main.css\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js ***!
  \************************************************************************************/
/***/ (function(module) {

"use strict";
eval("\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/ // css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function(useSourceMap) {\n    var list = [] // return the list of modules as css string\n    ;\n    list.toString = function toString() {\n        return this.map(function(item) {\n            var content = cssWithMappingToString(item, useSourceMap);\n            if (item[2]) {\n                return '@media '.concat(item[2], ' {').concat(content, '}');\n            }\n            return content;\n        }).join('');\n    } // import a list of modules into the list\n    ;\n    // eslint-disable-next-line func-names\n    list.i = function(modules, mediaQuery, dedupe) {\n        if (typeof modules === 'string') {\n            // eslint-disable-next-line no-param-reassign\n            modules = [\n                [\n                    null,\n                    modules,\n                    ''\n                ]\n            ];\n        }\n        var alreadyImportedModules = {};\n        if (dedupe) {\n            for(var i = 0; i < this.length; i++){\n                // eslint-disable-next-line prefer-destructuring\n                var id = this[i][0];\n                if (id != null) {\n                    alreadyImportedModules[id] = true;\n                }\n            }\n        }\n        for(var _i = 0; _i < modules.length; _i++){\n            var item = [].concat(modules[_i]);\n            if (dedupe && alreadyImportedModules[item[0]]) {\n                continue;\n            }\n            if (mediaQuery) {\n                if (!item[2]) {\n                    item[2] = mediaQuery;\n                } else {\n                    item[2] = ''.concat(mediaQuery, ' and ').concat(item[2]);\n                }\n            }\n            list.push(item);\n        }\n    };\n    return list;\n};\nfunction cssWithMappingToString(item, useSourceMap) {\n    var content = item[1] || '' // eslint-disable-next-line prefer-destructuring\n    ;\n    var cssMapping = item[3];\n    if (!cssMapping) {\n        return content;\n    }\n    if (useSourceMap && typeof btoa === 'function') {\n        var sourceMapping = toComment(cssMapping);\n        var sourceURLs = cssMapping.sources.map(function(source) {\n            return '/*# sourceURL='.concat(cssMapping.sourceRoot || '').concat(source, ' */');\n        });\n        return [\n            content\n        ].concat(sourceURLs).concat([\n            sourceMapping\n        ]).join('\\n');\n    }\n    return [\n        content\n    ].join('\\n');\n} // Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n    var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,'.concat(base64);\n    return '/*# '.concat(data, ' */');\n}\n\n//# sourceMappingURL=api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9ydW50aW1lL2FwaS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxxQkFBcUI7QUFDekU7QUFDQTtBQUNBLFNBQVM7QUFDVCxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLGlCQUFpQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixxQkFBcUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCxjQUFjO0FBQ3JFO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvcnVudGltZS9hcGkuanM/Y2E0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovIC8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih1c2VTb3VyY2VNYXApIHtcbiAgICB2YXIgbGlzdCA9IFtdIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgICA7XG4gICAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oaXRlbSkge1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG4gICAgICAgICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICAgICAgICAgIHJldHVybiAnQG1lZGlhICcuY29uY2F0KGl0ZW1bMl0sICcgeycpLmNvbmNhdChjb250ZW50LCAnfScpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgICAgIH0pLmpvaW4oJycpO1xuICAgIH0gLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgICA7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbiAgICBsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5LCBkZWR1cGUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICAgICAgICBtb2R1bGVzID0gW1xuICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9kdWxlcyxcbiAgICAgICAgICAgICAgICAgICAgJydcbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICBdO1xuICAgICAgICB9XG4gICAgICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgICAgIGlmIChkZWR1cGUpIHtcbiAgICAgICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICAgICAgICAgICAgICB2YXIgaWQgPSB0aGlzW2ldWzBdO1xuICAgICAgICAgICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZm9yKHZhciBfaSA9IDA7IF9pIDwgbW9kdWxlcy5sZW5ndGg7IF9pKyspe1xuICAgICAgICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfaV0pO1xuICAgICAgICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobWVkaWFRdWVyeSkge1xuICAgICAgICAgICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgICAgICAgICAgICBpdGVtWzJdID0gbWVkaWFRdWVyeTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpdGVtWzJdID0gJycuY29uY2F0KG1lZGlhUXVlcnksICcgYW5kICcpLmNvbmNhdChpdGVtWzJdKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBsaXN0O1xufTtcbmZ1bmN0aW9uIGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKSB7XG4gICAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuICAgIDtcbiAgICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gICAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH1cbiAgICBpZiAodXNlU291cmNlTWFwICYmIHR5cGVvZiBidG9hID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuICAgICAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24oc291cmNlKSB7XG4gICAgICAgICAgICByZXR1cm4gJy8qIyBzb3VyY2VVUkw9Jy5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8ICcnKS5jb25jYXQoc291cmNlLCAnICovJyk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgY29udGVudFxuICAgICAgICBdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW1xuICAgICAgICAgICAgc291cmNlTWFwcGluZ1xuICAgICAgICBdKS5qb2luKCdcXG4nKTtcbiAgICB9XG4gICAgcmV0dXJuIFtcbiAgICAgICAgY29udGVudFxuICAgIF0uam9pbignXFxuJyk7XG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcbiAgICB2YXIgZGF0YSA9ICdzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCwnLmNvbmNhdChiYXNlNjQpO1xuICAgIHJldHVybiAnLyojICcuY29uY2F0KGRhdGEsICcgKi8nKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app!":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app! ***!
  \*******************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return __webpack_require__(/*! private-next-pages/_app */ \"./pages/_app.js\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_app\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/cGFnZT0lMkZfYXBwJmFic29sdXRlUGFnZVBhdGg9cHJpdmF0ZS1uZXh0LXBhZ2VzJTJGX2FwcCEuanMiLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxnREFBeUI7QUFDaEQ7QUFDQTtBQUNBLE9BQU8sSUFBVTtBQUNqQixNQUFNLFVBQVU7QUFDaEI7QUFDQSxPQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzYzZWQiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgKHdpbmRvdy5fX05FWFRfUCA9IHdpbmRvdy5fX05FWFRfUCB8fCBbXSkucHVzaChbXG4gICAgICBcIi9fYXBwXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwicHJpdmF0ZS1uZXh0LXBhZ2VzL19hcHBcIik7XG4gICAgICB9XG4gICAgXSk7XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgd2luZG93Ll9fTkVYVF9QLnB1c2goW1wiL19hcHBcIl0pXG4gICAgICB9KTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app!\n");

/***/ }),

/***/ "./public/css/main.css":
/*!*****************************!*\
  !*** ./public/css/main.css ***!
  \*****************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var api = __webpack_require__(/*! !../../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[1]!../../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[2]!./main.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[2]!./public/css/main.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\n                // These elements should always exist. If they do not,\n                // this code should fail.\n                var anchorElement = document.querySelector('#__next_css__DO_NOT_USE__');\n                var parentNode = anchorElement.parentNode// Normally <head>\n                ;\n                // Each style tag should be placed right before our\n                // anchor. By inserting before and not after, we do not\n                // need to track the last inserted element.\n                parentNode.insertBefore(element, anchorElement);\n            };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n    if (!a && b || a && !b) {\n        return false;\n    }\n    let p;\n    for(p in a){\n        if (isNamedExport && p === 'default') {\n            continue;\n        }\n        if (a[p] !== b[p]) {\n            return false;\n        }\n    }\n    for(p in b){\n        if (isNamedExport && p === 'default') {\n            continue;\n        }\n        if (!a[p]) {\n            return false;\n        }\n    }\n    return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[1]!../../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[2]!./main.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[2]!./public/css/main.css\",\n      function () {\n        content = __webpack_require__(/*! !!../../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[1]!../../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[2]!./main.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[2]!./public/css/main.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvY3NzL21haW4uY3NzLmpzIiwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyx1TkFBMkc7QUFDN0gsMEJBQTBCLG1CQUFPLENBQUMsMmVBQWtQOztBQUVwUjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7QUFHQSxJQUFJLElBQVU7QUFDZCx5QkFBeUIsVUFBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSSxpQkFBaUI7QUFDckIsTUFBTSwyZUFBa1A7QUFDeFA7QUFDQSxrQkFBa0IsbUJBQU8sQ0FBQywyZUFBa1A7O0FBRTVROztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdCQUFnQixVQUFVOztBQUUxQjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEVBQUUsVUFBVTtBQUNaO0FBQ0EsR0FBRztBQUNIOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3B1YmxpYy9jc3MvbWFpbi5jc3M/MjAwZSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXN0eWxlLWxvYWRlci9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbM10ub25lT2ZbOF0udXNlWzFdIS4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1szXS5vbmVPZls4XS51c2VbMl0hLi9tYWluLmNzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAvLyBUaGVzZSBlbGVtZW50cyBzaG91bGQgYWx3YXlzIGV4aXN0LiBJZiB0aGV5IGRvIG5vdCxcbiAgICAgICAgICAgICAgICAvLyB0aGlzIGNvZGUgc2hvdWxkIGZhaWwuXG4gICAgICAgICAgICAgICAgdmFyIGFuY2hvckVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjX19uZXh0X2Nzc19fRE9fTk9UX1VTRV9fJyk7XG4gICAgICAgICAgICAgICAgdmFyIHBhcmVudE5vZGUgPSBhbmNob3JFbGVtZW50LnBhcmVudE5vZGUvLyBOb3JtYWxseSA8aGVhZD5cbiAgICAgICAgICAgICAgICA7XG4gICAgICAgICAgICAgICAgLy8gRWFjaCBzdHlsZSB0YWcgc2hvdWxkIGJlIHBsYWNlZCByaWdodCBiZWZvcmUgb3VyXG4gICAgICAgICAgICAgICAgLy8gYW5jaG9yLiBCeSBpbnNlcnRpbmcgYmVmb3JlIGFuZCBub3QgYWZ0ZXIsIHdlIGRvIG5vdFxuICAgICAgICAgICAgICAgIC8vIG5lZWQgdG8gdHJhY2sgdGhlIGxhc3QgaW5zZXJ0ZWQgZWxlbWVudC5cbiAgICAgICAgICAgICAgICBwYXJlbnROb2RlLmluc2VydEJlZm9yZShlbGVtZW50LCBhbmNob3JFbGVtZW50KTtcbiAgICAgICAgICAgIH07XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cbmlmIChtb2R1bGUuaG90KSB7XG4gIGlmICghY29udGVudC5sb2NhbHMgfHwgbW9kdWxlLmhvdC5pbnZhbGlkYXRlKSB7XG4gICAgdmFyIGlzRXF1YWxMb2NhbHMgPSBmdW5jdGlvbiBpc0VxdWFsTG9jYWxzKGEsIGIsIGlzTmFtZWRFeHBvcnQpIHtcbiAgICBpZiAoIWEgJiYgYiB8fCBhICYmICFiKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgbGV0IHA7XG4gICAgZm9yKHAgaW4gYSl7XG4gICAgICAgIGlmIChpc05hbWVkRXhwb3J0ICYmIHAgPT09ICdkZWZhdWx0Jykge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGFbcF0gIT09IGJbcF0pIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmb3IocCBpbiBiKXtcbiAgICAgICAgaWYgKGlzTmFtZWRFeHBvcnQgJiYgcCA9PT0gJ2RlZmF1bHQnKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWFbcF0pIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn07XG4gICAgdmFyIG9sZExvY2FscyA9IGNvbnRlbnQubG9jYWxzO1xuXG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXG4gICAgICBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbM10ub25lT2ZbOF0udXNlWzFdIS4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1szXS5vbmVPZls4XS51c2VbMl0hLi9tYWluLmNzc1wiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbM10ub25lT2ZbOF0udXNlWzFdIS4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1szXS5vbmVPZls4XS51c2VbMl0hLi9tYWluLmNzc1wiKTtcblxuICAgICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKCFpc0VxdWFsTG9jYWxzKG9sZExvY2FscywgY29udGVudC5sb2NhbHMpKSB7XG4gICAgICAgICAgICAgICAgbW9kdWxlLmhvdC5pbnZhbGlkYXRlKCk7XG5cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgICAgICAgICAgICB1cGRhdGUoY29udGVudCk7XG4gICAgICB9XG4gICAgKVxuICB9XG5cbiAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkge1xuICAgIHVwZGF0ZSgpO1xuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./public/css/main.css\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js ***!
  \************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nconst isOldIE = function isOldIE() {\n    let memo;\n    return function memorize() {\n        if (typeof memo === 'undefined') {\n            // Test for IE <= 9 as proposed by Browserhacks\n            // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n            // Tests for existence of standard globals is to allow style-loader\n            // to operate correctly into non-standard environments\n            // @see https://github.com/webpack-contrib/style-loader/issues/177\n            memo = Boolean(window && document && document.all && !window.atob);\n        }\n        return memo;\n    };\n}();\nconst getTarget = function getTarget() {\n    const memo = {};\n    return function memorize(target) {\n        if (typeof memo[target] === 'undefined') {\n            let styleTarget = document.querySelector(target);\n            // Special case to return head of iframe instead of iframe itself\n            if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n                try {\n                    // This will throw an exception if access to iframe is blocked\n                    // due to cross-origin restrictions\n                    styleTarget = styleTarget.contentDocument.head;\n                } catch (e) {\n                    // istanbul ignore next\n                    styleTarget = null;\n                }\n            }\n            memo[target] = styleTarget;\n        }\n        return memo[target];\n    };\n}();\nconst stylesInDom = [];\nfunction getIndexByIdentifier(identifier) {\n    let result = -1;\n    for(let i = 0; i < stylesInDom.length; i++){\n        if (stylesInDom[i].identifier === identifier) {\n            result = i;\n            break;\n        }\n    }\n    return result;\n}\nfunction modulesToDom(list, options) {\n    const idCountMap = {};\n    const identifiers = [];\n    for(let i = 0; i < list.length; i++){\n        const item = list[i];\n        const id = options.base ? item[0] + options.base : item[0];\n        const count = idCountMap[id] || 0;\n        const identifier = id + ' ' + count.toString();\n        idCountMap[id] = count + 1;\n        const index = getIndexByIdentifier(identifier);\n        const obj = {\n            css: item[1],\n            media: item[2],\n            sourceMap: item[3]\n        };\n        if (index !== -1) {\n            stylesInDom[index].references++;\n            stylesInDom[index].updater(obj);\n        } else {\n            stylesInDom.push({\n                identifier: identifier,\n                updater: addStyle(obj, options),\n                references: 1\n            });\n        }\n        identifiers.push(identifier);\n    }\n    return identifiers;\n}\nfunction insertStyleElement(options) {\n    const style = document.createElement('style');\n    const attributes = options.attributes || {};\n    if (typeof attributes.nonce === 'undefined') {\n        const nonce = // eslint-disable-next-line no-undef\n         true ? __webpack_require__.nc : 0;\n        if (nonce) {\n            attributes.nonce = nonce;\n        }\n    }\n    Object.keys(attributes).forEach(function(key) {\n        style.setAttribute(key, attributes[key]);\n    });\n    if (typeof options.insert === 'function') {\n        options.insert(style);\n    } else {\n        const target = getTarget(options.insert || 'head');\n        if (!target) {\n            throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n        }\n        target.appendChild(style);\n    }\n    return style;\n}\nfunction removeStyleElement(style) {\n    // istanbul ignore if\n    if (style.parentNode === null) {\n        return false;\n    }\n    style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */ const replaceText = function replaceText() {\n    const textStore = [];\n    return function replace(index, replacement) {\n        textStore[index] = replacement;\n        return textStore.filter(Boolean).join('\\n');\n    };\n}();\nfunction applyToSingletonTag(style, index, remove, obj) {\n    const css = remove ? '' : obj.media ? '@media ' + obj.media + ' {' + obj.css + '}' : obj.css;\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = replaceText(index, css);\n    } else {\n        const cssNode = document.createTextNode(css);\n        const childNodes = style.childNodes;\n        if (childNodes[index]) {\n            style.removeChild(childNodes[index]);\n        }\n        if (childNodes.length) {\n            style.insertBefore(cssNode, childNodes[index]);\n        } else {\n            style.appendChild(cssNode);\n        }\n    }\n}\nfunction applyToTag(style, options, obj) {\n    let css = obj.css;\n    const media = obj.media;\n    const sourceMap = obj.sourceMap;\n    if (media) {\n        style.setAttribute('media', media);\n    } else {\n        style.removeAttribute('media');\n    }\n    if (sourceMap && typeof btoa !== 'undefined') {\n        css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */';\n    }\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n    } else {\n        while(style.firstChild){\n            style.removeChild(style.firstChild);\n        }\n        style.appendChild(document.createTextNode(css));\n    }\n}\nlet singleton = null;\nlet singletonCounter = 0;\nfunction addStyle(obj, options) {\n    let style;\n    let update;\n    let remove;\n    if (options.singleton) {\n        const styleIndex = singletonCounter++;\n        style = singleton || (singleton = insertStyleElement(options));\n        update = applyToSingletonTag.bind(null, style, styleIndex, false);\n        remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n    } else {\n        style = insertStyleElement(options);\n        update = applyToTag.bind(null, style, options);\n        remove = function() {\n            removeStyleElement(style);\n        };\n    }\n    update(obj);\n    return function updateStyle(newObj) {\n        if (newObj) {\n            if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n                return;\n            }\n            update(obj = newObj);\n        } else {\n            remove();\n        }\n    };\n}\nmodule.exports = function(list, options) {\n    options = options || {};\n    // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n    // tags it will allow on a page\n    if (!options.singleton && typeof options.singleton !== 'boolean') {\n        options.singleton = isOldIE();\n    }\n    list = list || [];\n    let lastIdentifiers = modulesToDom(list, options);\n    return function update(newList) {\n        newList = newList || [];\n        if (Object.prototype.toString.call(newList) !== '[object Array]') {\n            return;\n        }\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            stylesInDom[index].references--;\n        }\n        const newLastIdentifiers = modulesToDom(newList, options);\n        for(let i1 = 0; i1 < lastIdentifiers.length; i1++){\n            const identifier = lastIdentifiers[i1];\n            const index = getIndexByIdentifier(identifier);\n            if (stylesInDom[index].references === 0) {\n                stylesInDom[index].updater();\n                stylesInDom.splice(index, 1);\n            }\n        }\n        lastIdentifiers = newLastIdentifiers;\n    };\n};\n\n//# sourceMappingURL=injectStylesIntoStyleTag.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\n");

/***/ }),

/***/ "./pages/_app.js":
/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _public_css_main_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../public/css/main.css */ \"./public/css/main.css\");\n/* harmony import */ var _public_css_main_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_public_css_main_css__WEBPACK_IMPORTED_MODULE_1__);\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        });\n    }\n    return target;\n}\n\n// CSS\n\nfunction MyApp(param) {\n    var Component = param.Component, pageProps = param.pageProps;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: \"C:\\\\Users\\\\Yair G\\\\Desktop\\\\Yweb\\\\pages\\\\_app.js\",\n        lineNumber: 5,\n        columnNumber: 12\n    }, this);\n}\n_c = MyApp;\n/* harmony default export */ __webpack_exports__[\"default\"] = (MyApp);\nvar _c;\n$RefreshReg$(_c, \"MyApp\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBREEsTUFBTTtBQUN5QjtBQUUvQixTQUFTQSxLQUFLLENBQUMsS0FBd0IsRUFBRTtRQUF4QkMsU0FBUyxHQUFYLEtBQXdCLENBQXRCQSxTQUFTLEVBQUVDLFNBQVMsR0FBdEIsS0FBd0IsQ0FBWEEsU0FBUztJQUNqQyxxQkFBTyw4REFBQ0QsU0FBUyxvQkFBS0MsU0FBUzs7OztZQUFJO0NBQ3RDO0FBRlFGLEtBQUFBLEtBQUs7QUFJZCwrREFBZUEsS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9wYWdlcy9fYXBwLmpzP2UwYWQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ1NTXHJcbmltcG9ydCAnLi4vcHVibGljL2Nzcy9tYWluLmNzcydcclxuXHJcbmZ1bmN0aW9uIE15QXBwKHsgQ29tcG9uZW50LCBwYWdlUHJvcHMgfSkge1xyXG4gICAgcmV0dXJuIDxDb21wb25lbnQgey4uLnBhZ2VQcm9wc30gLz5cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgTXlBcHAiXSwibmFtZXMiOlsiTXlBcHAiLCJDb21wb25lbnQiLCJwYWdlUHJvcHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/_app.js\n");

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV$1 =  jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV$1;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-dev-runtime.development.js\n");

/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSx1SkFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz81Nzc3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-dev-runtime.js\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app!"), __webpack_exec__("./node_modules/next/dist/client/router.js"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);